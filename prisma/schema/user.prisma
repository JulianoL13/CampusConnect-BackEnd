model User {
    id  Int @id @default(autoincrement())
    fullName String
    password String
    email String @unique
    birthDate DateTime?
    phone String? @unique
    cpf String @unique
    registration String @unique
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    community UserCommunities[]
    profile Profile?
    postVote PostVote?
    commentVote CommentVote?
    roles userRole[]
    course UserCourse[]
}

model Profile {
    id  Int @id @default(autoincrement())
    name String
    bio String  @db.VarChar(150)
    pic String
    

    user User @relation(fields: [userId], references: [id], onDelete: Cascade)
    userId Int @unique
    comments Comment[]
    posts Post[]
}

model Role {
    id Int @id @default(autoincrement())
    role String
    description String?

    users userRole[]
    resource RoleResource[]
}

model userRole {
    user User @relation(fields: [userId], references: [id], onDelete: Cascade)
    userId Int
    role Role @relation(fields: [roleId], references: [id], onDelete: SetDefault)
    roleId Int

    @@id([userId, roleId])
}

model RoleResource {
    role Role @relation(fields: [roleId], references: [id], onDelete: Cascade)
    roleId Int
    resource Resource @relation(fields: [resourceId], references: [id], onDelete: Cascade)
    resourceId Int

    @@id([roleId, resourceId])
}

model Resource {
    id Int @id @default(autoincrement())
    resource String

    role RoleResource[]
}
